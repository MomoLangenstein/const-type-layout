var searchIndex = JSON.parse('{\
"type_layout":{"doc":"<code>const-type-layout</code> is a type layout comparison aid, â€¦","t":[13,3,13,3,13,13,13,13,18,18,8,8,8,24,3,3,4,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,10,11,5,11,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Array","Discriminant","Enum","Field","Pointer","Primitive","Reference","Struct","TYPE_GRAPH","TYPE_LAYOUT","TypeGraph","TypeGraphLayout","TypeLayout","TypeLayout","TypeLayoutGraph","TypeLayoutInfo","TypeStructure","Union","Variant","alignment","big_endian_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","discriminant","eq","eq","eq","eq","eq","fields","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","insert","into","into","into","into","into","into","name","name","name","ne","ne","ne","ne","new","offset","partial_cmp","partial_cmp","partial_cmp","populate_graph","serialise","serialise_type_graph","serialised_len","serialised_type_graph_len","serialize","serialize","serialize","serialize","serialize","size","structure","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","fields","fields","inner","inner","item","len","mutability","mutability","repr","repr","repr","variants"],"q":["type_layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_layout::TypeStructure","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,0,1,1,1,1,2,3,0,0,0,0,0,0,0,1,0,4,5,6,4,1,7,5,8,6,4,1,7,5,8,4,1,7,5,8,4,1,7,5,8,7,5,8,7,4,1,7,5,8,7,6,4,1,7,5,8,6,4,1,7,5,8,6,6,4,1,7,5,8,4,7,8,4,1,7,5,6,8,7,5,8,9,6,0,6,0,4,1,7,5,8,4,4,4,1,7,5,8,6,4,1,7,5,8,6,4,1,7,5,8,8,6,4,1,7,5,8,10,11,12,13,14,14,12,13,10,11,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typelayoutinfo",3]],[[],["typestructure",4]],[[],["variant",3]],[[],["discriminant",3]],[[],["field",3]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[["discriminant",3]],["ordering",4]],[[],["ordering",4]],null,[[["typelayoutinfo",3]],["bool",15]],[[["typestructure",4]],["bool",15]],[[["variant",3]],["bool",15]],[[["discriminant",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typelayoutinfo",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["typelayoutinfo",3]],["bool",15]],[[["typestructure",4]],["bool",15]],[[["variant",3]],["bool",15]],[[["discriminant",3]],["bool",15]],[[]],null,[[],[["ordering",4],["option",4,["ordering"]]]],[[["discriminant",3]],[["ordering",4],["option",4,["ordering"]]]],[[],[["ordering",4],["option",4,["ordering"]]]],[[["typelayoutgraph",3]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"TypeStructure"],[8,"TypeGraphLayout"],[8,"TypeLayout"],[3,"TypeLayoutInfo"],[3,"Discriminant"],[3,"TypeLayoutGraph"],[3,"Variant"],[3,"Field"],[8,"TypeGraph"],[13,"Struct"],[13,"Union"],[13,"Reference"],[13,"Pointer"],[13,"Array"],[13,"Enum"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};